{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACTsC;;;;;;;IAoB9B,qEAAoE;IAClE,mEAAoD;IACpD,mEAAqD;IACrD,mEAAwC;IAC1C,4DAAK;;;IAHC,0DAA0C;IAA1C,oKAA0C;IAC1C,0DAA2C;IAA3C,qKAA2C;IAC3C,0DAA8B;IAA9B,wJAA8B;;AAQrC,MAAM,YAAY;IAMvB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QALpC,gBAAW,GAAW,EAAE,CAAC;QAEzB,UAAK,GAAgB,EAAE,CAAC;QAI7B,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;YACzB,YAAY,EAAE,GAAG;SAClB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IACnF,CAAC;;wEAbU,YAAY;0GAAZ,YAAY;QA1BrB,yEAAuB;QACrB,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,oEAAG;QACD,oHACA;QAAA,2EAA0G;QAAhE,qLAAyB;QAAnE,4DAA0G;QAC5G,4DAAI;QACJ,2EAAqB;QACnB,wEAAO;QACP,qEAAI;QACF,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAChB,4DAAK;QACL,4DAAQ;QACR,yEAAO;QACP,wGAIK;;QACL,4DAAQ;QACV,4DAAQ;QACV,4DAAM;;QAlBwC,0DAAyB;QAAzB,oFAAyB;QAW9C,2DAA6C;QAA7C,oLAA6C;;;;;;;;;;;;;;;;;;;;;;;;ACtBhB;AAEX;AACF;AACoB;AACtB;AACa;;AAiBjD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAHb;QACT,oDAAU;KACX,YARQ;YACP,oEAAa;YACb,uDAAW;YACX,2EAAmB;YACnB,kEAAgB;SACjB;mIAMU,SAAS,mBAblB,wDAAY,aAGZ,oEAAa;QACb,uDAAW;QACX,2EAAmB;QACnB,kEAAgB;;;;;;;;;;;;;;;;;;;;ACDb,MAAM,UAAU;IACrB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IACrC,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAS,qBAAqB,CAAC,CAAC;IACvD,CAAC;;oEANU,UAAU;2GAAV,UAAU,WAAV,UAAU;;;;;;;;;;;;;;;;AChBvB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\nimport { AngularFuseJsOptions } from '@almothafar/angular-fusejs';\nimport { AppService, Book } from './app.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"container\">\n      <h1>Angular-fusejs</h1>\n      <p>\n        This demo will search with book Title or Author, try it\n        <input type=\"search\" class=\"form-control\" [(ngModel)]=\"searchTerms\" placeholder=\"Enter search terms here\">\n      </p>\n      <table class=\"table\">\n        <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Score</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let book of (books | fuseJs:searchTerms:searchOptions)\">\n          <td [innerHTML]=\"book.fuseJsHighlighted.title\"></td>\n          <td [innerHTML]=\"book.fuseJsHighlighted.author\"></td>\n          <td [innerHTML]=\"book.fuseJsScore\"></td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public searchTerms: string = '';\n  public searchOptions: AngularFuseJsOptions<Object>;\n  public books: Array<Book> = [];\n\n\n  constructor(private _appService: AppService) {\n    this.searchOptions = {\n      keys: ['title', 'author'],\n      maximumScore: 0.5,\n    };\n\n    this._appService.getBooks().pipe(take(1)).subscribe(books => this.books = books);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFuseJsModule } from '@almothafar/angular-fusejs';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularFuseJsModule,\n    HttpClientModule\n  ],\n  providers: [\n    AppService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Book {\n  author: string;\n  country: string;\n  imageLink: string;\n  language: string;\n  link: string;\n  pages: number;\n  title: string;\n  year: number;\n}\n\n@Injectable()\nexport class AppService {\n  constructor(private _http: HttpClient) {\n  }\n\n  public getBooks(): Observable<Book[]> {\n    return this._http.get<Book[]>('./assets/books.json');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}